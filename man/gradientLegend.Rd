% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{gradientLegend}
\alias{gradientLegend}
\title{Add a gradient legend to a plot.}
\usage{
gradientLegend(valRange, color = "topo", nCol = 30, pos = 0.5, side = 4,
  length = 0.25, depth = 0.05, inside = TRUE, coords = FALSE,
  pos.num = NULL, n.seg = 3, border.col = "black", dec = NULL,
  fit.margin = TRUE)
}
\arguments{
\item{valRange}{Range of the values that is represented by the color 
palette. Normally two value-vector. If a larger vector is provided, only 
the min and max values are being used.}

\item{color}{Name of color palette to use ('topo', 'terrain', 'heat', 
'rainbow'). Custom color palettes can also be provided, but then the 
argument \code{nCol} is ignored.}

\item{nCol}{Number of colors in the color palette.}

\item{pos}{A number indicating the position on the axis in proportion. 
Using the arguments \code{length} and \code{depth} and \code{side} the 
position of the legend is calculated automatically. Alternatively, one 
could provide  a vector with 4 numbers, providing the xleft, ybottom, 
xright, ytop of a rectangle. These 4 points are indicated in proportions of 
the x- and y-axis. However, if the argument \code{coords} is set to TRUE, 
these positions are taken as values in the Cartesian coordinate system of 
the plot. Note: \code{coords} is only considered for 4-number vectors of 
\code{pos}.}

\item{side}{Which axis to choose: 1=bottom, 2=left, 3=top, 4=right.
Default is 4.}

\item{length}{Number, indicating the width of the legend as proportion with 
respect to the axis indicated by \code{side}. 
Note: when \code{pos} is defined by 4 numbers, \code{length} is ignored.}

\item{depth}{Number, indicating the height of the legend as proportion 
with respect to the axis perpendicular to \code{side}.
Note: when \code{pos} is defined by 4 numbers, \code{depth} is ignored.}

\item{inside}{Logical: whether or not to plot the legend inside or outside 
the plot area.
Note: when \code{pos} is defined by 4 numbers, \code{inside} is ignored.}

\item{coords}{Logical: whether or not \code{pos} is defined as coordinates. 
When FALSE, the default, \code{pos} is defined in proportions. 
Note: when \code{pos} is defined by 1 number, \code{inside} is ignored.
#' @param color Name of color palette to use ('topo', 'terrain', 'heat', 
'rainbow'). Custom color palettes can also be provided, but then the 
argument \code{nCol} is ignored.}

\item{pos.num}{Numeric value, indicating the position of the numbers with 
respect to the tick marks. 1=bottom, 2=left, 3=top, 4=right.}

\item{n.seg}{Number of ticks and markers on the scale.}

\item{border.col}{Color of the border and the ticks.}

\item{dec}{Number of decimals for rounding the numbers, set to NULL on 
default (no rounding).}

\item{fit.margin}{Logical: whether the labels of the gradient legend 
should be forced to fit in the margin or not.}
}
\description{
Add a gradient legend to a contour plot (or other plot) to 
indicate the range of values represented by the color palette.
}
\examples{
# empty plot:
emptyPlot(1,1, main="Test plot")
gradientLegend(valRange=c(-14,14),pos=.5, side=3)

# This produces a warning, as there is no space for labels here:
\dontrun{
gradientLegend(valRange=c(-14,14),pos=.125, side=4, inside=FALSE)
}
# Following options to fix this:
## a. put labels on other side of legend -
## not a good option, as the labels will overlap with the plot
gradientLegend(valRange=c(-14,14),pos=.125, side=4, inside=FALSE, pos.num=2)
## b. put the legend in the plot region
emptyPlot(1,1, main="Test plot")
gradientLegend(valRange=c(-14,14),pos=.125, side=4, inside=TRUE)
## c. Increase the margins:
oldmar = par()$mar
par(mar=oldmar+c(0,0,0,1))
emptyPlot(1,1, main="Test plot")
gradientLegend(valRange=c(-14,14),pos=.125, side=4, inside=FALSE)
par(mar=oldmar)
## d. the last option is not a fix, but avoid warnings: 
## set fit.margin to FALSE
emptyPlot(1,1, main="Test plot")
gradientLegend(valRange=c(-14,14),pos=.125, side=4, inside=FALSE, fit.margin=FALSE)

# change border color (and font color too!)
gradientLegend(valRange=c(-14,14),pos=.75, length=.5,
color=alphaPalette('white', f.seq=seq(0,1, by=.1)), border.col=alpha('gray'))

# when defining custom points, it is still important to specify side:

gradientLegend(valRange=c(-14,14), pos=c(.5,.25,.7,-.05), coords=TRUE, 
border.col='red', side=1)


}
\seealso{
Other Functions for plotting: \code{\link{addInterval}},
  \code{\link{add_bars}}, \code{\link{add_n_points}},
  \code{\link{alphaPalette}}, \code{\link{alpha}},
  \code{\link{check_normaldist}},
  \code{\link{color_contour}}, \code{\link{dotplot_error}},
  \code{\link{drawDevArrows}}, \code{\link{emptyPlot}},
  \code{\link{errorBars}}, \code{\link{fill_area}},
  \code{\link{getCoords}}, \code{\link{getFigCoords}},
  \code{\link{getProps}}, \code{\link{legend_margin}},
  \code{\link{marginDensityPlot}},
  \code{\link{plot_error}}, \code{\link{plot_image}},
  \code{\link{plotsurface}}, \code{\link{sortBoxplot}}
}
\author{
Jacolien van Rij
}
